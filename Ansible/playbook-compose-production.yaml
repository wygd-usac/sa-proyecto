---
- hosts: all
  become: true
  # vars:
  #   create_containers: 1
  #   default_container_name: pagina
  #   default_container_image: wygd/pagina:latest
  #   default_container_command: sleep 1d

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install Docker compose Module for Python
      pip:
        name: docker-compose

    - name: Add "app-admin" user to "docker" group
      remote_user: app-admin
      user:
        name: "app-admin"
        group: "docker"
        append: yes
      tags:
        - docker
    - name: Install docker-compose from official github repo
      remote_user: app-admin
      get_url:
        url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    # - name: Pull default Docker image
    #   docker_image:
    #     name: "{{ default_container_image }}"
    #     source: pull
- hosts: production
  become: true
  tasks:
    - name: Find out playbook's path
      shell: pwd
      register: playbook_path_output
    - debug: var=playbook_path_output.stdout
    - name: Creates directory
      file:
        path: production
        state: directory
    - name: copy nginx files
      remote_user: app-admin
      copy:
        remote_src: no
        src: ../Backend/nginx/nginx.conf
        dest: production/nginx.conf
    - name: copy docker-compose file
      remote_user: app-admin
      copy:
        remote_src: no
        src: docker-compose-production.yaml
        dest: production/docker-compose.yaml
    # use files parameter to use multiple docker-compose.yml files
    - name: deploy Docker Compose stack
      remote_user: app-admin
      docker_compose:
        project_src: production/
        state: absent
    - name: Run container
      remote_user: app-admin
      shell:
        cmd: "docker-compose pull"
        chdir: production/
    - name: deploy Docker Compose stack
      remote_user: app-admin
      docker_compose:
        project_src: production/
        state: present